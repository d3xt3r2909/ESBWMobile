<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="errorProvider.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEADw8AAAEAIADoAwAAFgAAACgAAAAPAAAAHgAAAAEAIAAAAAAAhAMAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAA/xo0AP8aNAD/GjQA/xo0AP8aNAD/GjQA9vZUAKlnxACpZ8QAqWfEAKlbzADmnqQA/x4wAP8aNAD/G
        jQA/xo0HP8aNFT/GjSA/xo0YP8aNFT/GjRg9vZUSKlnxFCpZ8RkqWfEYKlbzFzmpqA8/x4wZP8aNEz/G
        jQE/xo0bP8aNWD/GjV4/xo1iP8aNXj/GjWE+wJJHKljyVylW9GoqWfFrKlbzZTebtU4/yIt4P8aNWT/G
        jRE/xo0EP8aNFj/GjQo/xo0LP8aNCT/GjRc/xo0/Oq2kTDqrpkEucNwVKVL4DTSMwhM/yIsYP8aNCz/G
        jQQ/xo0AP8aNAD/GjQA/xo0APsGKAEDJi0o/yYl4Ps6BMD/Ji4hB0IkpOJ6qADedtAA/yIsAP8aNAD/G
        jQAAAAAAP8aNAD/GjQA/x40MPsONTzSUn3wrYsOXNFXQgjR2r3c4m5h0Pr+PQkTngwJAy4sAP8aNAAAA
        AAAAAAAAP8aNAD/GjQU+xoxQO4GoZSpQzJQpUNjUPlzIlTBHvm8wM8V8OIaicD6/j0I7ppcAP8aNAAAA
        AABh1LEAPsaMAD3FiylNzJx4YdGymj+FvJUkS9XbJk/azCtMxMc3Y65oQWvAdEK5l248yYcRPcWLAAAA
        AABh1LEAUc2gAFHNoDde067JY9ayw1Odt24nT9fiMlja4DZVzNg9eKyGYtaxx1vSq7NRzaAfUs6hAGHU
        sQBh1LEAX9OvAWHUsYZh1LHIgd7GlpPe0Z4tVtKzKU3OtzNRxo1Kh7xuZ9e0xGHUse1h1LFQYdSxAGHU
        sQBh1LEAYdSxDWDUsFZ22r81mefUt3mv0KYtNcOjMFLOhkVi0YxfksiNkuPQvXDYu2Jf07AsYdSxAGHU
        sQBh1LEAYdSxAHbavgCb5dcYmObUUFR1zh45Os4sMJX/AH61/wCl+M4KmOTVXJ3m2CN83MMAYdSxAGHU
        sQBh1LEAYdSxAJvl1gCX5NQAmefUAF2DzwA8P88AU0TYAJ/s4gCX49QAl+TUAJfk1ACX5NQAAAAAAAAA
        AAAAAAAAAAAAAJfk1ACX5NQAl+TUAJfk1AAAAAAAAAAAAAAAAACX5NQAl+TUAJfk1ACX5NQAAAAAAAAA
        AAD//gAAAAAAAAAAAAAAAAAAAAAAAAAAAACAAgAAgAIAAIACAAAAAgAAAAAAAAAAAAAAAAAAAAYAAMOG
        AAA=
</value>
  </data>
  <metadata name="openFileDialog.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>140, 17</value>
  </metadata>
</root>